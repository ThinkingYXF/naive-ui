import{_ as S,c as y,o as b,a as o,b as V,d as l,w as e,n as w,u as C,e as M,f as j,g as z,r as s,h as n}from"./index-DK-O6LKg.js";const A={components:{},setup(){const a=C(),t=M(()=>!a.value),f=a;return{showAnchor:t,displayMode:z(),wrapperStyle:j(()=>f.value?"padding: 16px 16px 24px 16px;":"display: flex; flex-wrap: nowrap; padding: 32px 24px 56px 56px;"),contentStyle:j(()=>t.value?"width: calc(100% - 228px); margin-right: 36px;":"width: 100%; padding-right: 12px;"),url:"demo/pages/docs/controlled-uncontrolled/zhCN/index.md"}}},B={key:0,style:{width:"192px"}};function R(a,t,f,r,U,D){const k=s("edit-on-github-header"),u=s("n-p"),p=s("n-h2"),d=s("n-text"),x=s("n-code"),m=s("n-scrollbar"),v=s("n-card"),g=s("n-h3"),i=s("n-anchor-link"),N=s("n-anchor");return b(),y("div",{class:"doc",style:w(r.wrapperStyle)},[o("div",{style:w(r.contentStyle)},[l(k,{"relative-url":"demo/pages/docs/controlled-uncontrolled/zhCN/index.md",text:"受控模式与非受控模式"}),l(u,null,{default:e(()=>t[0]||(t[0]=[n("一个组件的行为可以分为受控模式和非受控模式两种。非受控模式指的是只监听组件的变化，而不去控制组件的 value，受控模式指的是控制组件的值。")])),_:1}),l(p,{id:"非受控模式"},{default:e(()=>t[1]||(t[1]=[n("非受控模式")])),_:1}),l(u,null,{default:e(()=>[t[4]||(t[4]=n("在这种情况下，你不能控制 ")),l(d,{code:""},{default:e(()=>t[2]||(t[2]=[n("<n-input />")])),_:1}),t[5]||(t[5]=n(" 的 ")),l(d,{code:""},{default:e(()=>t[3]||(t[3]=[n("value")])),_:1}),t[6]||(t[6]=n("，而只能监听它的变化，组件值的变化由组件自身控制。"))]),_:1}),l(v,{embedded:"",bordered:!1,class:"md-card","content-style":"padding: 0;"},{default:e(()=>[l(m,{"x-scrollable":"","content-style":"padding: 16px;"},{default:e(()=>[l(x,null,{default:e(()=>t[7]||(t[7]=[o("pre",null,[o("span",{class:"hljs-tag"},[n("<"),o("span",{class:"hljs-name"},"n-input"),n(" @"),o("span",{class:"hljs-attr"},"update:value"),n("="),o("span",{class:"hljs-string"},'"handleUpdateValue"'),n(" />")])],-1)])),_:1})]),_:1})]),_:1}),l(p,{id:"受控模式"},{default:e(()=>t[8]||(t[8]=[n("受控模式")])),_:1}),l(u,null,{default:e(()=>[t[10]||(t[10]=n("在这种情况下，你既监听了组件的变化，然后也控制了组件的值。如果你不更新 ")),l(d,{code:""},{default:e(()=>t[9]||(t[9]=[n("value")])),_:1}),t[11]||(t[11]=n("，那么组件的值不会改变，组件值的变化由你控制。"))]),_:1}),l(v,{embedded:"",bordered:!1,class:"md-card","content-style":"padding: 0;"},{default:e(()=>[l(m,{"x-scrollable":"","content-style":"padding: 16px;"},{default:e(()=>[l(x,null,{default:e(()=>t[12]||(t[12]=[o("pre",null,[o("span",{class:"hljs-tag"},[n("<"),o("span",{class:"hljs-name"},"n-input"),n(),o("span",{class:"hljs-attr"},":value"),n("="),o("span",{class:"hljs-string"},'"value"'),n(" @"),o("span",{class:"hljs-attr"},"update:value"),n("="),o("span",{class:"hljs-string"},'"handleUpdateValue"'),n(" />")])],-1)])),_:1})]),_:1})]),_:1}),l(g,{id:"<n-text-code>v-model</n-text>"},{default:e(()=>[l(d,{code:""},{default:e(()=>t[13]||(t[13]=[n("v-model")])),_:1})]),_:1}),l(u,null,{default:e(()=>[l(d,{code:""},{default:e(()=>t[14]||(t[14]=[n("v-model")])),_:1}),t[18]||(t[18]=n(" 控制的组件在受控模式下，因为 ")),l(d,{code:""},{default:e(()=>t[15]||(t[15]=[n("v-model")])),_:1}),t[19]||(t[19]=n(" 等同于 ")),l(d,{code:""},{default:e(()=>t[16]||(t[16]=[n(":model-value")])),_:1}),t[20]||(t[20]=n(" 和 ")),l(d,{code:""},{default:e(()=>t[17]||(t[17]=[n("@update:model-value")])),_:1}),t[21]||(t[21]=n(" 的组合。"))]),_:1}),l(p,{id:"naive-ui-中的受控模式"},{default:e(()=>t[22]||(t[22]=[n("naive-ui 中的受控模式")])),_:1}),l(u,null,{default:e(()=>[t[27]||(t[27]=n("不同的组件库区分受控与非受控模式的区别是不同的。在 naive-ui 中，只要 ")),l(d,{code:""},{default:e(()=>t[23]||(t[23]=[n("value")])),_:1}),t[28]||(t[28]=n(" 是 ")),l(d,{code:""},{default:e(()=>t[24]||(t[24]=[n("undefined")])),_:1}),t[29]||(t[29]=n(" 或者根本没有传，那么组件的值会是非受控的。也就是说你将一个组件的值设为 ")),l(d,{code:""},{default:e(()=>t[25]||(t[25]=[n("undefined")])),_:1}),t[30]||(t[30]=n(" 并不能清空它，只会改变它的控制模式。一般情况下清空可以使用 ")),l(d,{code:""},{default:e(()=>t[26]||(t[26]=[n("null")])),_:1}),t[31]||(t[31]=n("。"))]),_:1}),l(g,{id:"不止-<n-text-code>value</n-text>"},{default:e(()=>[t[33]||(t[33]=n("不止 ")),l(d,{code:""},{default:e(()=>t[32]||(t[32]=[n("value")])),_:1})]),_:1}),l(u,null,{default:e(()=>[t[36]||(t[36]=n("任何 ")),l(d,{code:""},{default:e(()=>t[34]||(t[34]=[n("xxx")])),_:1}),t[37]||(t[37]=n(" 与 ")),l(d,{code:""},{default:e(()=>t[35]||(t[35]=[n("@update:xxx")])),_:1}),t[38]||(t[38]=n(" 的属性对都可以有受控和非受控模式。"))]),_:1})],4),r.showAnchor?(b(),y("div",B,[l(N,{"internal-scrollable":"",bound:16,type:"block",style:{width:"192px",position:"sticky",top:"32px","max-height":"calc(100vh - 32px - 64px)",height:"auto"},"offset-target":"#doc-layout","ignore-gap":!0},{default:e(()=>[l(i,{title:"非受控模式",href:"#非受控模式"}),l(i,{title:"受控模式",href:"#受控模式"}),l(i,{title:"naive-ui 中的受控模式",href:"#naive-ui-中的受控模式"})]),_:1})])):V("",!0)],4)}const I=S(A,[["render",R]]);export{I as default};
